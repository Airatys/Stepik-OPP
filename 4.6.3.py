# Квадратный трехчлен – это многочлен вида ax2+bx+cax2+bx+c, где a≠0a=0. Например:
# x2+1x2−5x+6
# x2+1x2−5x+6Значение переменной xx, при котором квадратный трехчлен обращается в ноль, называют его корнем. Квадратный трехчлен может иметь один корень, два корня или вовсе не иметь корней. Корни квадратного трехчлена, если они существуют, находятся по формуле:
# x1,2=−b±b2−4ac2a
# x1,2​=2a−b±b2−4ac
# ​​Реализуйте класс QuadraticPolynomial, описывающий квадратный трехчлен. При создании экземпляра класс должен принимать три аргумента в следующем порядке:
#     a — коэффициент aa квадратного трехчлена
#     b — коэффициент bb квадратного трехчлена
#     c — коэффициент cc квадратного трехчлена
# Экземпляр класса QuadraticPolynomial должен иметь три атрибута:
#     a — коэффициент aa квадратного трехчлена
#     b — коэффициент bb квадратного трехчлена
#     c — коэффициент cc квадратного трехчлена
# Класс QuadraticPolynomial должен иметь четыре свойства:
#     x1 — свойство, доступное только для чтения, возвращающее корень квадратного трехчлена, вычисленный по формуле:
#     x1=−b−b2−4ac2a
#     x1​=2a−b−b2−4ac
# ​​Если квадратный трехчлен не имеет корней (b2−4ac<0b2−4ac<0), значением свойства должно быть значение None
# x2 — свойство, доступное только для чтения, возвращающее корень квадратного трехчлена, вычисленный по формуле:
# x2=−b+b2−4ac2a
# x2​=2a−b+b2−4ac
#     ​​Если квадратный трехчлен не имеет корней (b2−4ac<0b2−4ac<0), значением свойства должно быть значение None
#     view — свойство, доступное только для чтения, возвращающее строку вида:
#     ax^2 + bx + c
#     где a, b и с представляют коэффициенты квадратного трехчлена
#     coefficients — свойство, доступное для чтения и записи, возвращающее кортеж вида:
#     (a, b, c)
#     где a, b и с представляют коэффициенты квадратного трехчлена
# Примечание 1. Если квадратный трехчлен имеет лишь один корень, значения свойств x1 и x2 должны совпадать.
# Примечание 2. При изменении коэффициентов квадратного трехчлена через соответствующие атрибуты или свойство coefficients значения свойств x1, x2, view и coefficients также должны изменяться.
# Примечание 3. Если какие-либо коэффициенты квадратного трехчлена равны нулю, они по-прежнему должны присутствовать в строке, возвращаемой свойством view, дополнительно их убирать не нужно.
# Примечание 4. Дополнительная проверка данных на корректность не требуется. Гарантируется, что реализованный класс используется только с корректными данными.
# Примечание 5. Никаких ограничений касательно реализации класса QuadraticPolynomial нет, она может быть произвольной.

import math

class QuadraticPolynomial:
    def __init__(self, a, b, c):
        self.a = a
        self.b = b
        self.c = c
    
    @property
    def x1(self):
        if self.b ** 2 - 4 * self.a * self.c < 0:
            return 
        return (-self.b - math.sqrt(self.b ** 2 - 4 * self.a * self.c)) / (2 * self.a)
    
    @property
    def x2(self):
        if self.b ** 2 - 4 * self.a * self.c < 0:
            return
        return (-self.b + math.sqrt(self.b ** 2 - 4 * self.a * self.c)) / (2 * self.a)
    
    @property
    def view(self):
        return f'{self.a}x^2 + {self.b}x + {self.c}'.replace('+ -', '- ')
    
    @property
    def coefficients(self):
        return self.a, self.b, self.c
    
    @coefficients.setter
    def coefficients(self, volume):
        a, b, c = volume
        self.a, self.b, self.c = a, b, c
        return self.a, self.b, self.c
   


